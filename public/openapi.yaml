openapi: 3.0.0
info:
  title: 'Indeavor Employee Management'
  version: 1.0.0
paths:
  /api/login:
    post:
      tags:
        - auth
      summary: 'Login a user'
      description: 'Login a user.'
      operationId: AuthController.login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggedInUserResource'
        '422':
          description: 'Unprocessable entity'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  message: { type: string, example: 'Invalid credentials.' }
                type: object
  /api/logout:
    post:
      tags:
        - auth
      summary: 'Logout a user'
      description: 'Logout a user.'
      operationId: AuthController.logout
      responses:
        '204':
          description: 'No content'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  message: { type: string, example: 'Invalid credentials.' }
                type: object
      security:
        -
          BearerToken: []
  /api/skills:
    get:
      tags:
        - skills
      summary: 'Show skills'
      description: 'Display a listing of the resource.'
      operationId: SkillController.index
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SkillResource'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  message: { type: string, example: 'Invalid credentials.' }
                type: object
      security:
        -
          BearerToken: []
  '/api/skills/{skill_uuid}':
    get:
      tags:
        - skills
      summary: 'Show a specific skill'
      description: 'Display a listing of the resource.'
      operationId: SkillController.show
      parameters:
        -
          name: skill_uuid
          in: path
          required: true
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillResource'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  message: { type: string, example: 'Invalid credentials.' }
                type: object
      security:
        -
          BearerToken: []
components:
  schemas:
    UserRoleEnum:
      type: string
      enum:
        - Admin
        - Scheduler
    ValidationError:
      properties:
        message:
          type: string
          example: 'The given data was invalid.'
        errors:
          properties:
            'key 1':
              type: array
              items:
                type: string
                example: 'Error message 1'
            'key 2':
              type: array
              items:
                type: string
                example: 'Error message 2'
          type: object
      type: object
    LoginRequest:
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: john@example.com
        password:
          type: string
          example: '123456'
      type: object
    AccessTokenResource:
      properties:
        access_token:
          type: string
          example: 6|JeXDJdhmaQN4Nl3T3DaD9sE20PoPrdUx15W0m2eA
        type:
          type: string
          example: bearer
      type: object
    EmployeeResource:
      properties:
        uuid:
          type: string
          example: 717f46a9-1d19-4527-af39-ae872c951f17
        first_name:
          type: string
          example: John
        last_name:
          type: string
          example: Doe
        skills:
          $ref: '#/components/schemas/SkillResource'
        created_at:
          type: string
          format: date-time
          example: '2022-08-27T16:14:46.000000Z'
      type: object
    LoggedInUserResource:
      properties:
        user:
          $ref: '#/components/schemas/UserResource'
        token:
          $ref: '#/components/schemas/AccessTokenResource'
      type: object
    SkillResource:
      properties:
        uuid:
          type: string
          example: 717f46a9-1d19-4527-af39-ae872c951f17
        name:
          type: string
          example: 'My Skill'
        description:
          type: string
          example: 'My Description'
        created_at:
          type: string
          format: date-time
          example: '2022-08-27T16:14:46.000000Z'
      type: object
    UserResource:
      properties:
        uuid:
          type: string
          example: 717f46a9-1d19-4527-af39-ae872c951f17
        name:
          type: string
          example: 'John Doe'
        email:
          type: string
          example: john@example.com
        role:
          $ref: '#/components/schemas/UserRoleEnum'
      type: object
  securitySchemes:
    BearerToken:
      type: http
      bearerFormat: JWT
      scheme: bearer
tags:
  -
    name: auth
    description: 'User authentication'
  -
    name: skills
    description: Skills
